import { useEffect, useState } from "react";
import { Card, Loader, FormField } from "../components";
import Hero from "./Hero";
const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }

  return (
    <h2 className="mt-5 font-bold text-xl uppercase text-[#6449ff]">{title}</h2>
  );
};
const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState([]);

  const [searchText, setSearchText] = useState("");
  const [searchResult, setSearchResult] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  useEffect(() => {
    const fetchAllPosts = async () => {
      setLoading(true);

      try {
        const response = await fetch(
          `${import.meta.env.VITE_BACKEND_API}/api/v1/post`,
          {
            method: "GET",
            header: {
              "Content-Type": "application/json",
            },
          }
        );

        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        console.log(error);
        alert(error);
      } finally {
        setLoading(false);
      }
    };

    fetchAllPosts();
  }, []);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        );

        setSearchResult(searchResult);
      }, 500)
    );
  };

  return (
    <section className="max-w-7xl mx-auto mt-20">
      <Hero />
      <div>
        <h1 className="primary-heading text-3xl">
          The Community Show case
        </h1>
        <p className="primary-para">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E
        </p>
      </div>

      <div className="mt-16">
        <FormField
          handleChange={handleSearchChange}
          labelName="Search Post"
          type="text"
          name="text"
          value={searchText}
          placeholder="Search Post"
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-normal text-secondary-text text-xl mb-3">
                Showing result for{" "}
                <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}

            <div className="grid grid-cols-1 xs:grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchResult}
                  title="No search results found"
                />
              ) : (
                <RenderCards data={allPosts} title="No post found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
